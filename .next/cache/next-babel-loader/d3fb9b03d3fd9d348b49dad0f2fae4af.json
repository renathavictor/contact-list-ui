{"ast":null,"code":"var _jsxFileName = \"/media/renatha/Downloads/DEV/IFPB/contacts-ui/components/Lists.js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { VscTrash, VscEdit } from 'react-icons/vsc';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport AuthContext from '../context/auth/authContext';\nimport ListContext from '../context/list/listContext';\nimport ContactLists from './ContactLists';\nconst ContainerList = styled.div.withConfig({\n  displayName: \"Lists__ContainerList\",\n  componentId: \"sc-3rgull-0\"\n})([\"ul{min-width:400px;li{list-style:none;border:1px solid \", \";padding:1.5rem;border-radius:3px;display:flex;justify-content:space-between;margin-top:1rem;&:hover{background-color:\", \";}p:first-of-type{cursor:pointer;}svg{cursor:pointer;transition:transform .2s;&:first-of-type{fill:\", \";}&:last-of-type{fill:\", \";}&:hover{transform:scale(1.5);}}}@media(max-width:750px){min-width:300px;}}div:last-of-type{min-width:400px;}display:flex;justify-content:space-around;font-size:16px;margin-top:5rem;\"], props => props.theme.lightgrey, props => props.theme.lightgrey, props => props.theme.grey, props => props.theme.danger);\n\nconst Lists = () => {\n  const authContext = useContext(AuthContext);\n  const listContext = useContext(ListContext);\n  const {\n    lists,\n    getLists,\n    setCurrent\n  } = listContext;\n  const {\n    0: selectList,\n    1: setSelectList\n  } = useState(null);\n  const {\n    0: openDelete,\n    1: setOpenDelete\n  } = useState(false);\n  const {\n    0: listDelete,\n    1: setListDelete\n  } = useState(null);\n  useEffect(() => {\n    authContext.loadUser();\n    getLists();\n  }, []);\n  useEffect(() => {\n    lists && setSelectList(lists[0]);\n  }, [lists]);\n\n  const handleClickList = e => {\n    console.log('clicou na lista', e.target.id);\n    const id = e.target.id;\n    const listFilter = lists.filter(list => String(list.id) === id)[0];\n    listFilter && setSelectList(listFilter);\n  };\n\n  const handleOpenDelete = event => {\n    console.log('event handle open delete ', event.target);\n    setOpenDelete(true);\n  };\n\n  const handleCloseDelete = event => {\n    console.log('event handle close delete ', event.target);\n    setOpenDelete(false);\n  };\n\n  const handleDeleteList = event => {\n    console.log('delete lista ');\n  };\n\n  console.log('selectList ', selectList);\n  return __jsx(React.Fragment, null, __jsx(ContainerList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, lists && lists.map(list => __jsx(React.Fragment, null, __jsx(\"li\", {\n    key: list.id,\n    className: 'list-title',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, __jsx(\"p\", {\n    onClick: handleClickList,\n    id: list.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, list.title), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, __jsx(VscEdit, {\n    style: {\n      marginRight: '1rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }), __jsx(VscTrash, {\n    value: list.id,\n    onClick: event => handleOpenDelete(event, list),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 19\n    }\n  })))))), selectList && __jsx(ContactLists, {\n    list: selectList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  })), __jsx(Dialog, {\n    open: openDelete,\n    onClose: handleCloseDelete,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, __jsx(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, \"Deletar lista?\"), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, __jsx(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Aten\\xE7\\xE3o, ao deletar a lista, todos os contatos da lista ser\\xE3o deletados tamb\\xE9m.\")), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    autoFocus: true,\n    onClick: handleCloseDelete,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"Cancelar\"), __jsx(Button, {\n    onClick: handleDeleteList,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, \"Deletar\"))));\n};\n\nexport default Lists;","map":{"version":3,"sources":["/media/renatha/Downloads/DEV/IFPB/contacts-ui/components/Lists.js"],"names":["React","useContext","useEffect","useState","styled","VscTrash","VscEdit","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","AuthContext","ListContext","ContactLists","ContainerList","div","props","theme","lightgrey","grey","danger","Lists","authContext","listContext","lists","getLists","setCurrent","selectList","setSelectList","openDelete","setOpenDelete","listDelete","setListDelete","loadUser","handleClickList","e","console","log","target","id","listFilter","filter","list","String","handleOpenDelete","event","handleCloseDelete","handleDeleteList","map","title","marginRight"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { VscTrash, VscEdit } from 'react-icons/vsc'\n\nimport Button from '@material-ui/core/Button'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport useMediaQuery from '@material-ui/core/useMediaQuery'\n\nimport AuthContext from '../context/auth/authContext'\nimport ListContext from '../context/list/listContext'\nimport ContactLists from './ContactLists'\n\nconst ContainerList = styled.div`\n  ul {\n    min-width: 400px;\n    li {\n      list-style: none;\n      border: 1px solid ${props => props.theme.lightgrey};\n      padding: 1.5rem;\n      border-radius: 3px;\n      display: flex;\n      justify-content: space-between;\n      margin-top: 1rem;\n      &:hover {\n        background-color:  ${props => props.theme.lightgrey};\n      }\n      p:first-of-type {\n        cursor: pointer;\n      }\n      svg {\n        cursor: pointer;\n        transition: transform .2s;\n        &:first-of-type {\n          fill: ${props => props.theme.grey};\n        }\n        &:last-of-type {\n          fill: ${props => props.theme.danger};\n        }\n        &:hover {\n          transform: scale(1.5);\n        }\n      }\n    }\n\n    @media(max-width: 750px) {\n      min-width: 300px;\n    }\n  }\n\n  div:last-of-type {\n    min-width: 400px;\n  }\n  display: flex;\n  justify-content: space-around;\n  font-size: 16px;\n  margin-top: 5rem;\n`\n\nconst Lists = () => {\n  const authContext = useContext(AuthContext)\n\n  const listContext = useContext(ListContext)\n  const { lists, getLists, setCurrent } = listContext\n\n  const [selectList, setSelectList] = useState(null)\n  const [openDelete, setOpenDelete] = useState(false)\n  const [listDelete, setListDelete] = useState(null)\n\n  useEffect(() => {\n    authContext.loadUser()\n\n    getLists()\n  }, [])\n\n  useEffect(() => {\n    lists && setSelectList(lists[0])\n  }, [lists])\n\n  const handleClickList = e => {\n    console.log('clicou na lista', e.target.id)\n    const id = e.target.id\n    const listFilter = lists.filter(list => String(list.id) === id)[0]\n    listFilter && setSelectList(listFilter)\n  }\n\n  const handleOpenDelete = event => {\n    console.log('event handle open delete ', event.target)\n    setOpenDelete(true)\n  }\n\n  const handleCloseDelete = event => {\n    console.log('event handle close delete ', event.target)\n    setOpenDelete(false)\n  }\n\n  const handleDeleteList = event => {\n    console.log('delete lista ')\n  }\n\n  console.log('selectList ', selectList)\n  return (\n    <>\n      <ContainerList>\n        <ul>\n        { lists && lists.map(list => (\n            <>\n              <li key={list.id} className={'list-title'}>\n                <p onClick={handleClickList} id={list.id}>{list.title}</p>\n                <p>\n                  <VscEdit style={{ marginRight: '1rem' }} />\n                  <VscTrash value={list.id} onClick={event => handleOpenDelete(event, list)} />\n                </p>\n              </li>\n            </>\n          ))}\n        </ul>\n        { selectList &&\n          <ContactLists list={selectList} />\n        }\n      </ContainerList>\n      <Dialog\n        open={openDelete}\n        onClose={handleCloseDelete}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{\"Deletar lista?\"}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Atenção, ao deletar a lista, todos os contatos da lista serão deletados também.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleCloseDelete} color=\"primary\">\n            Cancelar\n          </Button>\n          <Button onClick={handleDeleteList} color=\"primary\" autoFocus>\n            Deletar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default Lists\n"]},"metadata":{},"sourceType":"module"}