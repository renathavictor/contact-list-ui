{"ast":null,"code":"import _defineProperty from \"/media/renatha/Downloads/DEV/IFPB/contacts-ui/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_CONTACTS, ADD_CONTACT, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR, CLEAR_CONTACTS } from '../types';\n\nvar contactReducer = function contactReducer(state, action) {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contacts: action.payload,\n        loading: false\n      });\n\n    case ADD_CONTACT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contacts: [action.payload.contacts],\n        loading: false\n      });\n\n    case UPDATE_CONTACT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        // contacts: state.contacts.map(contact =>\n        //   contact._id === action.payload._id ? action.payload : contact\n        // ),\n        loading: false\n      });\n\n    case DELETE_CONTACT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        // contacts: state.contacts.filter(\n        //   contact => contact._id !== action.payload\n        // ),\n        loading: false\n      });\n\n    case CLEAR_CONTACTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contacts: null,\n        filtered: null,\n        error: null,\n        current: null\n      });\n\n    case SET_CURRENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        current: null\n      });\n\n    case FILTER_CONTACTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filtered: state.contacts.filter(function (contact) {\n          var regex = new RegExp(\"\".concat(action.payload), 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filtered: null\n      });\n\n    case CONTACT_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default contactReducer;","map":{"version":3,"sources":["/media/renatha/Downloads/DEV/IFPB/contacts-ui/context/contact/contactReducer.js"],"names":["GET_CONTACTS","ADD_CONTACT","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","CLEAR_CONTACTS","contactReducer","state","action","type","contacts","payload","loading","filtered","error","current","filter","contact","regex","RegExp","name","match","email"],"mappings":";;;;;;AAAA,SACEA,YADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,eAPF,EAQEC,YARF,EASEC,aATF,EAUEC,cAVF,QAWO,UAXP;;AAaA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AACxC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,YAAL;AACE,6CACKW,KADL;AAEEG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAFnB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKf,WAAL;AACE,6CACKU,KADL;AAEEG,QAAAA,QAAQ,EAAE,CAACF,MAAM,CAACG,OAAP,CAAeD,QAAhB,CAFZ;AAGEE,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKX,cAAL;AACE,6CACKM,KADL;AAEE;AACA;AACA;AACAK,QAAAA,OAAO,EAAE;AALX;;AAOF,SAAKd,cAAL;AACE,6CACKS,KADL;AAEE;AACA;AACA;AACAK,QAAAA,OAAO,EAAE;AALX;;AAOF,SAAKP,cAAL;AACE,6CACKE,KADL;AAEEG,QAAAA,QAAQ,EAAE,IAFZ;AAGEG,QAAAA,QAAQ,EAAE,IAHZ;AAIEC,QAAAA,KAAK,EAAE,IAJT;AAKEC,QAAAA,OAAO,EAAE;AALX;;AAOF,SAAKhB,WAAL;AACE,6CACKQ,KADL;AAEEQ,QAAAA,OAAO,EAAEP,MAAM,CAACG;AAFlB;;AAIF,SAAKX,aAAL;AACE,6CACKO,KADL;AAEEQ,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKb,eAAL;AACE,6CACKK,KADL;AAEEM,QAAAA,QAAQ,EAAEN,KAAK,CAACG,QAAN,CAAeM,MAAf,CAAsB,UAAAC,OAAO,EAAI;AACzC,cAAMC,KAAK,GAAG,IAAIC,MAAJ,WAAcX,MAAM,CAACG,OAArB,GAAgC,IAAhC,CAAd;AACA,iBAAOM,OAAO,CAACG,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BD,OAAO,CAACK,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CAApC;AACD,SAHS;AAFZ;;AAOF,SAAKf,YAAL;AACE,6CACKI,KADL;AAEEM,QAAAA,QAAQ,EAAE;AAFZ;;AAIF,SAAKT,aAAL;AACE,6CACKG,KADL;AAEEO,QAAAA,KAAK,EAAEN,MAAM,CAACG;AAFhB;;AAIF;AACE,aAAOJ,KAAP;AAlEJ;AAoED,CArED;;AAuEA,eAAeD,cAAf","sourcesContent":["import {\n  GET_CONTACTS,\n  ADD_CONTACT,\n  DELETE_CONTACT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_CONTACT,\n  FILTER_CONTACTS,\n  CLEAR_FILTER,\n  CONTACT_ERROR,\n  CLEAR_CONTACTS\n} from '../types'\n\nconst contactReducer = (state, action) => {\n  switch (action.type) {\n    case GET_CONTACTS:\n      return {\n        ...state,\n        contacts: action.payload,\n        loading: false\n      }\n    case ADD_CONTACT:\n      return {\n        ...state,\n        contacts: [action.payload.contacts],\n        loading: false\n      }\n    case UPDATE_CONTACT:\n      return {\n        ...state,\n        // contacts: state.contacts.map(contact =>\n        //   contact._id === action.payload._id ? action.payload : contact\n        // ),\n        loading: false\n      }\n    case DELETE_CONTACT:\n      return {\n        ...state,\n        // contacts: state.contacts.filter(\n        //   contact => contact._id !== action.payload\n        // ),\n        loading: false\n      }\n    case CLEAR_CONTACTS:\n      return {\n        ...state,\n        contacts: null,\n        filtered: null,\n        error: null,\n        current: null\n      }\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload\n      }\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null\n      }\n    case FILTER_CONTACTS:\n      return {\n        ...state,\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(`${action.payload}`, 'gi')\n          return contact.name.match(regex) || contact.email.match(regex)\n        })\n      }\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null\n      }\n    case CONTACT_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n\nexport default contactReducer"]},"metadata":{},"sourceType":"module"}