{"ast":null,"code":"import { createAction, createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport sagas from './sagas';\nexport const findCategories = createAction('FIND_CATEGORIES');\nexport const findCategoriesSuccessful = createAction('FIND_CATEGORIES_SUCCESSFUL');\nexport const findCategoriesFailure = createAction('FIND_CATEGORIES_FAILURE'); // export const FIND_CATEGORY_PRODUCTS = createAction('FIND_CATEGORY_PRODUCTS')\n// export const FIND_CATEGORY_PRODUCTS_SUCCESSFUL = createAction('FIND_CATEGORY_PRODUCTS_SUCCESSFUL')\n// export const FIND_CATEGORY_PRODUCTS_FAILURE = createAction('FIND_CATEGORY_PRODUCTS_FAILURE')\n\nconst initialState = {\n  items: [],\n  loading: true,\n  error: null,\n  pagination: {\n    page: 1,\n    total_pages: 0,\n    total_results: 0\n  }\n};\nconst categories = createReducer(initialState, {\n  [findCategories]: (state, action) => ({\n    loading: true\n  }),\n  [findCategoriesSuccessful]: (state, action) => {\n    console.log('actions ', action);\n    return {\n      items: action.payload.results,\n      pagination: {\n        page: action.payload.page,\n        total_pages: action.payload.total_pages,\n        total_results: action.payload.total_results\n      },\n      loading: false\n    };\n  },\n  [findCategoriesFailure]: (state, action) => ({\n    isFetching: false,\n    error: false,\n    errorMessage: action.payload\n  })\n});\nconst reducers = combineReducers({\n  categories\n});\nexport { sagas, reducers };","map":{"version":3,"sources":["/media/renatha/Downloads/DEV/IFPB/contacts-ui/store/modules/categories/index.js"],"names":["createAction","createReducer","combineReducers","sagas","findCategories","findCategoriesSuccessful","findCategoriesFailure","initialState","items","loading","error","pagination","page","total_pages","total_results","categories","state","action","console","log","payload","results","isFetching","errorMessage","reducers"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,kBAA5C;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,MAAMC,cAAc,GAAGJ,YAAY,CAAC,iBAAD,CAAnC;AACP,OAAO,MAAMK,wBAAwB,GAAGL,YAAY,CAAC,4BAAD,CAA7C;AACP,OAAO,MAAMM,qBAAqB,GAAGN,YAAY,CAAC,yBAAD,CAA1C,C,CACP;AACA;AACA;;AAEA,MAAMO,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,WAAW,EAAE,CAFH;AAGVC,IAAAA,aAAa,EAAE;AAHL;AAJO,CAArB;AAWA,MAAMC,UAAU,GAAGd,aAAa,CAACM,YAAD,EAAe;AAC7C,GAACH,cAAD,GAAkB,CAACY,KAAD,EAAQC,MAAR,MAAoB;AACpCR,IAAAA,OAAO,EAAE;AAD2B,GAApB,CAD2B;AAI7C,GAACJ,wBAAD,GAA4B,CAACW,KAAD,EAAQC,MAAR,KAAmB;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AACA,WAAQ;AACRT,MAAAA,KAAK,EAAES,MAAM,CAACG,OAAP,CAAeC,OADd;AAERV,MAAAA,UAAU,EAAE;AAAEC,QAAAA,IAAI,EAAEK,MAAM,CAACG,OAAP,CAAeR,IAAvB;AAA6BC,QAAAA,WAAW,EAAEI,MAAM,CAACG,OAAP,CAAeP,WAAzD;AAAsEC,QAAAA,aAAa,EAAEG,MAAM,CAACG,OAAP,CAAeN;AAApG,OAFJ;AAGRL,MAAAA,OAAO,EAAE;AAHD,KAAR;AAIC,GAV0C;AAW7C,GAACH,qBAAD,GAAyB,CAACU,KAAD,EAAQC,MAAR,MAAoB;AAC3CK,IAAAA,UAAU,EAAE,KAD+B;AAE3CZ,IAAAA,KAAK,EAAE,KAFoC;AAG3Ca,IAAAA,YAAY,EAAEN,MAAM,CAACG;AAHsB,GAApB;AAXoB,CAAf,CAAhC;AAkBA,MAAMI,QAAQ,GAAGtB,eAAe,CAAC;AAC/Ba,EAAAA;AAD+B,CAAD,CAAhC;AAIA,SACEZ,KADF,EAEEqB,QAFF","sourcesContent":["import { createAction, createReducer } from '@reduxjs/toolkit'\nimport { combineReducers } from 'redux'\n\nimport sagas from './sagas'\n\nexport const findCategories = createAction('FIND_CATEGORIES')\nexport const findCategoriesSuccessful = createAction('FIND_CATEGORIES_SUCCESSFUL')\nexport const findCategoriesFailure = createAction('FIND_CATEGORIES_FAILURE')\n// export const FIND_CATEGORY_PRODUCTS = createAction('FIND_CATEGORY_PRODUCTS')\n// export const FIND_CATEGORY_PRODUCTS_SUCCESSFUL = createAction('FIND_CATEGORY_PRODUCTS_SUCCESSFUL')\n// export const FIND_CATEGORY_PRODUCTS_FAILURE = createAction('FIND_CATEGORY_PRODUCTS_FAILURE')\n\nconst initialState = {\n  items: [],\n  loading: true,\n  error: null,\n  pagination: {\n    page: 1,\n    total_pages: 0,\n    total_results: 0\n  }\n}\n\nconst categories = createReducer(initialState, {\n  [findCategories]: (state, action) => ({\n    loading: true\n  }),\n  [findCategoriesSuccessful]: (state, action) => {\n    console.log('actions ', action)\n    return ({\n    items: action.payload.results,\n    pagination: { page: action.payload.page, total_pages: action.payload.total_pages, total_results: action.payload.total_results },\n    loading: false\n  })},\n  [findCategoriesFailure]: (state, action) => ({\n    isFetching: false,\n    error: false,\n    errorMessage: action.payload\n  })\n})\n\nconst reducers = combineReducers({\n  categories\n})\n\nexport {\n  sagas,\n  reducers\n}"]},"metadata":{},"sourceType":"module"}