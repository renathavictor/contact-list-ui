{"ast":null,"code":"var _jsxFileName = \"/media/renatha/Downloads/DEV/IFPB/contacts-ui/context/auth/AuthState.js\";\nvar __jsx = React.createElement;\nimport React, { useReducer } from 'react';\nimport api from '../../utils/api';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    user: null,\n    token: true ? null : localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    error: null\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(authReducer, initialState); //  load user\n\n  const loadUser = async () => {\n    setAuthToken(localStorage.token);\n\n    try {\n      // testar com o login para ver se funciona\n      const res = await api.get('/auth');\n      console.log('RESPONSE ', res); // const res = await api.post('/auth/login', { email: state.user.email, password: state.user.password })\n\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (error) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; // register user\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await api.post('/users/signup', formData, config);\n      console.log('res => ', res);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (error) {\n      console.log('ERROR ', error);\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data\n      });\n    }\n  }; // login user\n\n\n  const login = async formData => {\n    console.log('testar');\n\n    try {\n      const res = await api.post('/auth/login', formData);\n      console.log('res => ', res);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (error) {\n      console.log('ERROR ', error);\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response.data\n      });\n    }\n  }; // logout\n\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  }); // clear errors,\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return __jsx(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      loadUser,\n      login,\n      logout,\n      clearErrors\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/media/renatha/Downloads/DEV/IFPB/contacts-ui/context/auth/AuthState.js"],"names":["React","useReducer","api","AuthContext","authReducer","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","user","token","localStorage","getItem","isAuthenticated","loading","error","state","dispatch","loadUser","res","get","console","log","type","payload","data","register","formData","config","headers","post","response","login","logout","clearErrors","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react'\n\nimport api from '../../utils/api'\nimport AuthContext from './authContext'\nimport authReducer from './authReducer'\nimport setAuthToken from '../../utils/setAuthToken'\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS\n} from '../types'\n\nconst AuthState = props => {\n  const initialState = {\n    user: null,\n    token: typeof window === 'undefined' ? null : localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    error: null\n  }\n\n  const [state, dispatch] = useReducer(authReducer, initialState)\n  //  load user\n  const loadUser = async () => {\n    setAuthToken(localStorage.token)\n\n    try {\n      // testar com o login para ver se funciona\n      const res = await api.get('/auth')\n      console.log('RESPONSE ', res)\n      // const res = await api.post('/auth/login', { email: state.user.email, password: state.user.password })\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      })\n    } catch (error) {\n      dispatch({ type: AUTH_ERROR })\n    }\n  }\n\n  // register user\n  const register = async formData => {\n    const config = {\n      headers: { 'Content-Type': 'application/json' }\n    }\n    try {\n      const res = await api.post('/users/signup', formData, config)\n      console.log('res => ', res)\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      })\n\n      loadUser()\n    } catch (error) {\n      console.log('ERROR ', error)\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data\n      })\n    }\n  }\n  \n\n  // login user\n  const login = async formData => {\n    console.log('testar')\n    try {\n      const res = await api.post('/auth/login', formData)\n      console.log('res => ', res)\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      })\n\n      loadUser()\n    } catch (error) {\n      console.log('ERROR ', error)\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response.data\n      })\n    }\n  }\n\n  // logout\n  const logout = () => dispatch({ type: LOGOUT })\n\n  // clear errors,\n  const clearErrors = () => dispatch({ type: CLEAR_ERRORS })\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        loadUser,\n        login,\n        logout,\n        clearErrors\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  )\n}\n\nexport default AuthState\n"]},"metadata":{},"sourceType":"module"}