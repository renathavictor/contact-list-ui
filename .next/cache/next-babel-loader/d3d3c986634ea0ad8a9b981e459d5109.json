{"ast":null,"code":"var _jsxFileName = \"/media/renatha/Downloads/DEV/IFPB/contacts-ui/context/list/ListState.js\";\nvar __jsx = React.createElement;\nimport React, { useReducer } from 'react';\nimport api from '../../utils/api';\nimport ListContext from './listContext';\nimport listReducer from './listReducer';\nimport { GET_LISTS, ADD_LIST, DELETE_LIST, SET_CURRENT, CLEAR_CURRENT, UPDATE_LIST, FILTER_LISTS, CLEAR_LISTS, CLEAR_FILTER, LIST_ERROR } from '../types';\n\nconst ListState = props => {\n  const initialState = {\n    lists: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n  const {\n    0: state,\n    1: dispatch\n  } = useReducer(listReducer, initialState);\n\n  const getLists = async () => {\n    try {\n      const res = await api.get('/lists');\n      dispatch({\n        type: GET_LISTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: LIST_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  const addList = async list => {\n    try {\n      const res = await api.post('/lists', list);\n      dispatch({\n        type: ADD_LIST,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: LIST_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  const deleteList = async id => {\n    try {\n      await api.delete(`/lists/${id}`);\n      dispatch({\n        type: DELETE_LIST,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: LIST_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  const updateList = async list => {\n    try {\n      const res = await api.put(`/api/lists/${list._id}`, list);\n      dispatch({\n        type: UPDATE_LIST,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: LIST_ERROR,\n        payload: err.response.msg\n      });\n    }\n  };\n\n  const clearLists = () => {\n    dispatch({\n      type: CLEAR_LISTS\n    });\n  };\n\n  const setCurrent = list => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: list\n    });\n  };\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  const filterLists = text => {\n    dispatch({\n      type: FILTER_LISTS,\n      payload: text\n    });\n  };\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return __jsx(ListContext.Provider, {\n    value: {\n      lists: state.lists,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addList,\n      deleteList,\n      setCurrent,\n      clearCurrent,\n      updateList,\n      filterLists,\n      clearFilter,\n      getLists,\n      clearLists\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ListState;","map":{"version":3,"sources":["/media/renatha/Downloads/DEV/IFPB/contacts-ui/context/list/ListState.js"],"names":["React","useReducer","api","ListContext","listReducer","GET_LISTS","ADD_LIST","DELETE_LIST","SET_CURRENT","CLEAR_CURRENT","UPDATE_LIST","FILTER_LISTS","CLEAR_LISTS","CLEAR_FILTER","LIST_ERROR","ListState","props","initialState","lists","current","filtered","error","state","dispatch","getLists","res","get","type","payload","data","err","response","msg","addList","list","post","deleteList","id","delete","updateList","put","_id","clearLists","setCurrent","clearCurrent","filterLists","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react'\n\nimport api from '../../utils/api'\nimport ListContext from './listContext'\nimport listReducer from './listReducer'\n\nimport {\n  GET_LISTS,\n  ADD_LIST,\n  DELETE_LIST,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_LIST,\n  FILTER_LISTS,\n  CLEAR_LISTS,\n  CLEAR_FILTER,\n  LIST_ERROR\n} from '../types'\n\nconst ListState = props => {\n  const initialState = {\n    lists: null,\n    current: null,\n    filtered: null,\n    error: null\n  }\n\n  const [state, dispatch] = useReducer(listReducer, initialState)\n\n  const getLists = async () => {\n    try {\n      const res = await api.get('/lists')\n      dispatch({\n        type: GET_LISTS,\n        payload: res.data\n      })\n    } catch (err) {\n      dispatch({\n        type: LIST_ERROR,\n        payload: err.response.msg\n      })\n    }\n  }\n\n  const addList = async list => {\n    try {\n      const res = await api.post('/lists', list)\n\n      dispatch({\n        type: ADD_LIST,\n        payload: res.data\n      })\n    } catch (err) {\n      dispatch({\n        type: LIST_ERROR,\n        payload: err.response.msg\n      })\n    }\n  }\n\n  const deleteList = async id => {\n    try {\n      await api.delete(`/lists/${id}`)\n\n      dispatch({\n        type: DELETE_LIST,\n        payload: id\n      })\n    } catch (err) {\n      dispatch({\n        type: LIST_ERROR,\n        payload: err.response.msg\n      })\n    }\n  }\n\n  const updateList = async list => {\n    try {\n      const res = await api.put(\n        `/api/lists/${list._id}`,\n        list\n      )\n\n      dispatch({\n        type: UPDATE_LIST,\n        payload: res.data\n      })\n    } catch (err) {\n      dispatch({\n        type: LIST_ERROR,\n        payload: err.response.msg\n      })\n    }\n  }\n\n  const clearLists = () => {\n    dispatch({ type: CLEAR_LISTS })\n  }\n\n  const setCurrent = list => {\n    dispatch({ type: SET_CURRENT, payload: list })\n  }\n\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT })\n  }\n\n  const filterLists = text => {\n    dispatch({ type: FILTER_LISTS, payload: text })\n  }\n\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER })\n  }\n\n  return (\n    <ListContext.Provider\n      value={{\n        lists: state.lists,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        addList,\n        deleteList,\n        setCurrent,\n        clearCurrent,\n        updateList,\n        filterLists,\n        clearFilter,\n        getLists,\n        clearLists\n      }}\n    >\n      {props.children}\n    </ListContext.Provider>\n  )\n}\n\nexport default ListState\n"]},"metadata":{},"sourceType":"module"}