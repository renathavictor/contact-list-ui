{"ast":null,"code":"import _defineProperty from \"/media/renatha/Downloads/DEV/IFPB/contacts-ui/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _createReducer;\n\nimport { createAction, createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport sagas from './sagas';\nexport var findCategories = createAction('FIND_CATEGORIES');\nexport var findCategoriesSuccessful = createAction('FIND_CATEGORIES_SUCCESSFUL');\nexport var findCategoriesFailure = createAction('FIND_CATEGORIES_FAILURE'); // export const FIND_CATEGORY_PRODUCTS = createAction('FIND_CATEGORY_PRODUCTS')\n// export const FIND_CATEGORY_PRODUCTS_SUCCESSFUL = createAction('FIND_CATEGORY_PRODUCTS_SUCCESSFUL')\n// export const FIND_CATEGORY_PRODUCTS_FAILURE = createAction('FIND_CATEGORY_PRODUCTS_FAILURE')\n\nvar initialState = {\n  items: [],\n  loading: true,\n  error: null,\n  pagination: {\n    page: 1,\n    total_pages: 0,\n    total_results: 0\n  }\n};\nvar categories = createReducer(initialState, (_createReducer = {}, _defineProperty(_createReducer, findCategories, function (state, action) {\n  return {\n    loading: true\n  };\n}), _defineProperty(_createReducer, findCategoriesSuccessful, function (state, action) {\n  console.log('actions ', action);\n  return {\n    items: action.payload.results,\n    pagination: {\n      page: action.payload.page,\n      total_pages: action.payload.total_pages,\n      total_results: action.payload.total_results\n    },\n    loading: false\n  };\n}), _defineProperty(_createReducer, findCategoriesFailure, function (state, action) {\n  return {\n    isFetching: false,\n    error: false,\n    errorMessage: action.payload\n  };\n}), _createReducer));\nvar reducers = combineReducers({\n  categories: categories\n});\nexport { sagas, reducers };","map":{"version":3,"sources":["/media/renatha/Downloads/DEV/IFPB/contacts-ui/store/modules/categories/index.js"],"names":["createAction","createReducer","combineReducers","sagas","findCategories","findCategoriesSuccessful","findCategoriesFailure","initialState","items","loading","error","pagination","page","total_pages","total_results","categories","state","action","console","log","payload","results","isFetching","errorMessage","reducers"],"mappings":";;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,kBAA5C;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,IAAMC,cAAc,GAAGJ,YAAY,CAAC,iBAAD,CAAnC;AACP,OAAO,IAAMK,wBAAwB,GAAGL,YAAY,CAAC,4BAAD,CAA7C;AACP,OAAO,IAAMM,qBAAqB,GAAGN,YAAY,CAAC,yBAAD,CAA1C,C,CACP;AACA;AACA;;AAEA,IAAMO,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAE,CADI;AAEVC,IAAAA,WAAW,EAAE,CAFH;AAGVC,IAAAA,aAAa,EAAE;AAHL;AAJO,CAArB;AAWA,IAAMC,UAAU,GAAGd,aAAa,CAACM,YAAD,wDAC7BH,cAD6B,EACZ,UAACY,KAAD,EAAQC,MAAR;AAAA,SAAoB;AACpCR,IAAAA,OAAO,EAAE;AAD2B,GAApB;AAAA,CADY,mCAI7BJ,wBAJ6B,EAIF,UAACW,KAAD,EAAQC,MAAR,EAAmB;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AACA,SAAQ;AACRT,IAAAA,KAAK,EAAES,MAAM,CAACG,OAAP,CAAeC,OADd;AAERV,IAAAA,UAAU,EAAE;AAAEC,MAAAA,IAAI,EAAEK,MAAM,CAACG,OAAP,CAAeR,IAAvB;AAA6BC,MAAAA,WAAW,EAAEI,MAAM,CAACG,OAAP,CAAeP,WAAzD;AAAsEC,MAAAA,aAAa,EAAEG,MAAM,CAACG,OAAP,CAAeN;AAApG,KAFJ;AAGRL,IAAAA,OAAO,EAAE;AAHD,GAAR;AAIC,CAV2B,mCAW7BH,qBAX6B,EAWL,UAACU,KAAD,EAAQC,MAAR;AAAA,SAAoB;AAC3CK,IAAAA,UAAU,EAAE,KAD+B;AAE3CZ,IAAAA,KAAK,EAAE,KAFoC;AAG3Ca,IAAAA,YAAY,EAAEN,MAAM,CAACG;AAHsB,GAApB;AAAA,CAXK,mBAAhC;AAkBA,IAAMI,QAAQ,GAAGtB,eAAe,CAAC;AAC/Ba,EAAAA,UAAU,EAAVA;AAD+B,CAAD,CAAhC;AAIA,SACEZ,KADF,EAEEqB,QAFF","sourcesContent":["import { createAction, createReducer } from '@reduxjs/toolkit'\nimport { combineReducers } from 'redux'\n\nimport sagas from './sagas'\n\nexport const findCategories = createAction('FIND_CATEGORIES')\nexport const findCategoriesSuccessful = createAction('FIND_CATEGORIES_SUCCESSFUL')\nexport const findCategoriesFailure = createAction('FIND_CATEGORIES_FAILURE')\n// export const FIND_CATEGORY_PRODUCTS = createAction('FIND_CATEGORY_PRODUCTS')\n// export const FIND_CATEGORY_PRODUCTS_SUCCESSFUL = createAction('FIND_CATEGORY_PRODUCTS_SUCCESSFUL')\n// export const FIND_CATEGORY_PRODUCTS_FAILURE = createAction('FIND_CATEGORY_PRODUCTS_FAILURE')\n\nconst initialState = {\n  items: [],\n  loading: true,\n  error: null,\n  pagination: {\n    page: 1,\n    total_pages: 0,\n    total_results: 0\n  }\n}\n\nconst categories = createReducer(initialState, {\n  [findCategories]: (state, action) => ({\n    loading: true\n  }),\n  [findCategoriesSuccessful]: (state, action) => {\n    console.log('actions ', action)\n    return ({\n    items: action.payload.results,\n    pagination: { page: action.payload.page, total_pages: action.payload.total_pages, total_results: action.payload.total_results },\n    loading: false\n  })},\n  [findCategoriesFailure]: (state, action) => ({\n    isFetching: false,\n    error: false,\n    errorMessage: action.payload\n  })\n})\n\nconst reducers = combineReducers({\n  categories\n})\n\nexport {\n  sagas,\n  reducers\n}"]},"metadata":{},"sourceType":"module"}