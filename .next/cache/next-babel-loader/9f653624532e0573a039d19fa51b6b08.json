{"ast":null,"code":"import _regeneratorRuntime from \"/media/renatha/Downloads/DEV/IFPB/shoppinglist-ui/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getCategoriesRequest),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchGetCategoriesRequest),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(_callee);\n\nimport { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { findCategories, findCategoriesSuccessful, findCategoriesFailure } from './index';\nimport * as services from './services';\nexport function getCategoriesRequest(payload) {\n  var response;\n  return _regeneratorRuntime.wrap(function getCategoriesRequest$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return console.log('payload ==== ', payload);\n\n        case 3:\n          _context.next = 5;\n          return call(services.getCategories, payload);\n\n        case 5:\n          response = _context.sent;\n          _context.next = 8;\n          return put(findCategoriesSuccessful(response.data));\n\n        case 8:\n          _context.next = 10;\n          return console.log('RESPONSE == ', response);\n\n        case 10:\n          _context.next = 18;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 16;\n          return console.error(_context.t0);\n\n        case 16:\n          _context.next = 18;\n          return put(findCategoriesFailure(_context.t0));\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 12]]);\n}\n\nfunction watchGetCategoriesRequest() {\n  return _regeneratorRuntime.wrap(function watchGetCategoriesRequest$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(findCategories, getCategoriesRequest);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([watchGetCategoriesRequest()]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/media/renatha/Downloads/DEV/IFPB/shoppinglist-ui/store/modules/categories/sagas.js"],"names":["getCategoriesRequest","watchGetCategoriesRequest","all","call","put","takeLatest","findCategories","findCategoriesSuccessful","findCategoriesFailure","services","payload","console","log","getCategories","response","data","error"],"mappings":";;oDASkBA,oB;qDAYPC,yB;;;AArBX,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AAEA,SACEC,cADF,EAEEC,wBAFF,EAGEC,qBAHF,QAIO,SAJP;AAKA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AAEA,OAAO,SAAWT,oBAAX,CAAgCU,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEH,iBAAMC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,OAA7B,CAAN;;AAFG;AAAA;AAGc,iBAAMP,IAAI,CAACM,QAAQ,CAACI,aAAV,EAAyBH,OAAzB,CAAV;;AAHd;AAGGI,UAAAA,QAHH;AAAA;AAIH,iBAAMV,GAAG,CAACG,wBAAwB,CAACO,QAAQ,CAACC,IAAV,CAAzB,CAAT;;AAJG;AAAA;AAKH,iBAAMJ,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BE,QAA5B,CAAN;;AALG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAOH,iBAAMH,OAAO,CAACK,KAAR,aAAN;;AAPG;AAAA;AAQH,iBAAMZ,GAAG,CAACI,qBAAqB,aAAtB,CAAT;;AARG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAYP,SAAWP,yBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMI,UAAU,CAACC,cAAD,EAAiBN,oBAAjB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAME,GAAG,CAAC,CACRD,yBAAyB,EADjB,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, call, put, takeLatest } from 'redux-saga/effects'\n\nimport {\n  findCategories,\n  findCategoriesSuccessful,\n  findCategoriesFailure\n} from './index'\nimport * as services from './services'\n\nexport function * getCategoriesRequest(payload) {\n  try {\n    yield console.log('payload ==== ', payload)\n    const response = yield call(services.getCategories, payload)\n    yield put(findCategoriesSuccessful(response.data))\n    yield console.log('RESPONSE == ', response)\n  } catch (error) {\n    yield console.error(error)\n    yield put(findCategoriesFailure(error))\n  }\n}\n\nfunction * watchGetCategoriesRequest() {\n  yield takeLatest(findCategories, getCategoriesRequest)\n}\n\nexport default function * () {\n  yield all([\n    watchGetCategoriesRequest()\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}