{"ast":null,"code":"import _defineProperty from \"/media/renatha/Downloads/DEV/IFPB/contacts-ui/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/media/renatha/Downloads/DEV/IFPB/contacts-ui/components/NewContact.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport AlertContext from '../context/alert/alertContext';\nimport ListContext from '../context/list/listContext';\nimport ContactContext from '../context/contact/contactContext';\nimport AuthContext from '../context/auth/authContext';\nimport Form from './styles/Form';\n\nvar NewContact = function NewContact() {\n  _s();\n\n  var authContext = useContext(AuthContext);\n  var alertContext = useContext(AlertContext);\n  var listContext = useContext(ListContext);\n  var contactContext = useContext(ContactContext);\n  var setAlert = alertContext.setAlert;\n  var lists = listContext.lists,\n      error = listContext.error,\n      clearCurrent = listContext.clearCurrent;\n  var addContact = contactContext.addContact;\n  var isAuthenticated = authContext.isAuthenticated,\n      loading = authContext.loading;\n\n  var _useState = useState({\n    name: '',\n    email: '',\n    phone: '',\n    list: ''\n  }),\n      contact = _useState[0],\n      setContact = _useState[1];\n\n  var name = contact.name,\n      email = contact.email,\n      phone = contact.phone,\n      list = contact.list;\n\n  var onChangeContact = function onChangeContact(event) {\n    return setContact(_objectSpread(_objectSpread({}, contact), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  useEffect(function () {\n    if (!loading && !isAuthenticated) {\n      Router.push('/login');\n    }\n\n    return function () {\n      clearCurrent();\n    };\n  }, []);\n\n  var onSubmitContact = function onSubmitContact(event) {\n    event.preventDefault();\n\n    if (name === '') {\n      setAlert('O nome nÃ£o pode ficar em branco', 'danger');\n    } else {\n      console.log('contact ----- ', contact);\n      addContact(_objectSpread({}, contact));\n\n      if (!error) {\n        setAlert('Adicionado com sucesso!', 'success');\n        setContact({\n          name: '',\n          email: '',\n          phone: '',\n          list: ''\n        });\n      }\n    }\n  };\n\n  var phoneMask = function phoneMask(userInput) {\n    var numbers = userInput.match(/\\d/g);\n    var numberLength = 0;\n\n    if (numbers) {\n      numberLength = numbers.join('').length;\n    }\n\n    if (numberLength > 10) {\n      return ['(', /[1-9]/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\n    } else {\n      return ['(', /[1-9]/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\n    }\n  };\n\n  return isAuthenticated && __jsx(Form, {\n    onSubmit: onSubmitContact,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(\"fieldset\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Adicionar novo contato\"), __jsx(\"label\", {\n    htmlFor: \"list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, __jsx(\"select\", {\n    name: \"list\",\n    id: \"list\",\n    onChange: onChangeContact,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, lists && lists.map(function (list) {\n    return __jsx(\"option\", {\n      value: list.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, list.title);\n  }))), __jsx(\"label\", {\n    htmlFor: \"name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Nome\", __jsx(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Digite o nome do contato\",\n    value: name,\n    onChange: onChangeContact,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"Email\", __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Digite o email do contato\",\n    value: email,\n    onChange: onChangeContact,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"phone\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, \"Telefone\", __jsx(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    placeholder: \"Digite o telefone do contato\",\n    value: phone,\n    onChange: onChangeContact,\n    pattern: function pattern() {\n      return phoneMask(phone);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginTop: '2.5rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/nova-lista\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Crie uma nova lista\")), __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"Adicionar\"))));\n};\n\n_s(NewContact, \"gHK3EcMoSVnrlvtAMwDjcUG2FZM=\");\n\n_c = NewContact;\nexport default NewContact;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewContact\");","map":{"version":3,"sources":["/media/renatha/Downloads/DEV/IFPB/contacts-ui/components/NewContact.js"],"names":["React","useState","useContext","useEffect","Router","Link","AlertContext","ListContext","ContactContext","AuthContext","Form","NewContact","authContext","alertContext","listContext","contactContext","setAlert","lists","error","clearCurrent","addContact","isAuthenticated","loading","name","email","phone","list","contact","setContact","onChangeContact","event","target","value","push","onSubmitContact","preventDefault","console","log","phoneMask","userInput","numbers","match","numberLength","join","length","map","id","title","display","justifyContent","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport Router from 'next/router'\nimport Link from 'next/link'\n\nimport AlertContext from '../context/alert/alertContext'\nimport ListContext from '../context/list/listContext'\nimport ContactContext from '../context/contact/contactContext'\nimport AuthContext from '../context/auth/authContext'\n\nimport Form from './styles/Form'\n\nconst NewContact = () => {\n  const authContext = useContext(AuthContext)\n  const alertContext = useContext(AlertContext)\n  const listContext = useContext(ListContext)\n  const contactContext = useContext(ContactContext)\n\n  const { setAlert } = alertContext\n  const { lists , error, clearCurrent } = listContext\n  const { addContact } = contactContext\n  const { isAuthenticated, loading } = authContext\n\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    list: ''\n  })\n\n  const { name, email, phone, list } = contact\n\n  const onChangeContact = event => setContact({ ...contact, [event.target.name]: event.target.value })\n\n  useEffect(() => {\n    if (!loading && !isAuthenticated) {\n      Router.push('/login')\n    }\n\n    return () => {\n      clearCurrent()\n    }\n  }, [])\n\n  const onSubmitContact = event => {\n    event.preventDefault()\n    if (name === '') {\n      setAlert('O nome nÃ£o pode ficar em branco', 'danger')\n    } else {\n      console.log('contact ----- ', contact)\n      addContact({\n        ...contact\n      })\n      if (!error) {\n        setAlert('Adicionado com sucesso!', 'success')\n        setContact({\n          name: '',\n          email: '',\n          phone: '',\n          list: ''\n        })\n      }\n    }\n  }\n\n  const phoneMask = userInput => {\n    let numbers = userInput.match(/\\d/g)\n    let numberLength = 0\n    if (numbers) {\n      numberLength = numbers.join('').length\n    }\n    if (numberLength > 10) {\n      return ['(', /[1-9]/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]\n    } else {\n      return ['(', /[1-9]/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]\n    }\n  }\n\n  return isAuthenticated && (\n    <Form\n      onSubmit={onSubmitContact}\n    >\n      <fieldset>\n        <h3>Adicionar novo contato</h3>\n        <label htmlFor='list'>\n          <select name=\"list\" id=\"list\" onChange={onChangeContact}>\n            { lists && lists.map(list => (\n              <option value={list.id}>{list.title}</option>\n              ))\n            }\n          </select>\n        </label>\n        <label htmlFor=\"name\">\n          Nome\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Digite o nome do contato\"\n            value={name}\n            onChange={onChangeContact}\n          />\n        </label>\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Digite o email do contato\"\n            value={email}\n            onChange={onChangeContact}\n          />\n        </label>\n        <label htmlFor=\"phone\">\n          Telefone\n          <input\n            type=\"text\"\n            name=\"phone\"\n            placeholder=\"Digite o telefone do contato\"\n            value={phone}\n            onChange={onChangeContact}\n            pattern={() => phoneMask(phone)}\n          />\n        </label>\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginTop: '2.5rem'\n        }}>\n          <Link href='/nova-lista'>\n            <a>Crie uma nova lista</a>\n          </Link>\n          <button type=\"submit\">Adicionar</button>\n        </div>\n      </fieldset>\n    </Form>\n  )\n}\n\nexport default NewContact\n"]},"metadata":{},"sourceType":"module"}