{"ast":null,"code":"import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { findCategories, findCategoriesSuccessful, findCategoriesFailure } from './index';\nimport * as services from './services';\nexport function* getCategoriesRequest(payload) {\n  try {\n    yield console.log('payload ==== ', payload);\n    const response = yield call(services.getCategories, payload);\n    yield put(findCategoriesSuccessful(response.data));\n    yield console.log('RESPONSE == ', response);\n  } catch (error) {\n    yield console.error(error);\n    yield put(findCategoriesFailure(error));\n  }\n}\n\nfunction* watchGetCategoriesRequest() {\n  yield takeLatest(findCategories, getCategoriesRequest);\n}\n\nexport default function* () {\n  yield all([watchGetCategoriesRequest()]);\n}","map":{"version":3,"sources":["/media/renatha/Downloads/DEV/IFPB/shoppinglist-ui/store/modules/categories/sagas.js"],"names":["all","call","put","takeLatest","findCategories","findCategoriesSuccessful","findCategoriesFailure","services","getCategoriesRequest","payload","console","log","response","getCategories","data","error","watchGetCategoriesRequest"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AAEA,SACEC,cADF,EAEEC,wBAFF,EAGEC,qBAHF,QAIO,SAJP;AAKA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AAEA,OAAO,UAAWC,oBAAX,CAAgCC,OAAhC,EAAyC;AAC9C,MAAI;AACF,UAAMC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,OAA7B,CAAN;AACA,UAAMG,QAAQ,GAAG,MAAMX,IAAI,CAACM,QAAQ,CAACM,aAAV,EAAyBJ,OAAzB,CAA3B;AACA,UAAMP,GAAG,CAACG,wBAAwB,CAACO,QAAQ,CAACE,IAAV,CAAzB,CAAT;AACA,UAAMJ,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BC,QAA5B,CAAN;AACD,GALD,CAKE,OAAOG,KAAP,EAAc;AACd,UAAML,OAAO,CAACK,KAAR,CAAcA,KAAd,CAAN;AACA,UAAMb,GAAG,CAACI,qBAAqB,CAACS,KAAD,CAAtB,CAAT;AACD;AACF;;AAED,UAAWC,yBAAX,GAAuC;AACrC,QAAMb,UAAU,CAACC,cAAD,EAAiBI,oBAAjB,CAAhB;AACD;;AAED,eAAe,aAAc;AAC3B,QAAMR,GAAG,CAAC,CACRgB,yBAAyB,EADjB,CAAD,CAAT;AAGD","sourcesContent":["import { all, call, put, takeLatest } from 'redux-saga/effects'\n\nimport {\n  findCategories,\n  findCategoriesSuccessful,\n  findCategoriesFailure\n} from './index'\nimport * as services from './services'\n\nexport function * getCategoriesRequest(payload) {\n  try {\n    yield console.log('payload ==== ', payload)\n    const response = yield call(services.getCategories, payload)\n    yield put(findCategoriesSuccessful(response.data))\n    yield console.log('RESPONSE == ', response)\n  } catch (error) {\n    yield console.error(error)\n    yield put(findCategoriesFailure(error))\n  }\n}\n\nfunction * watchGetCategoriesRequest() {\n  yield takeLatest(findCategories, getCategoriesRequest)\n}\n\nexport default function * () {\n  yield all([\n    watchGetCategoriesRequest()\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}