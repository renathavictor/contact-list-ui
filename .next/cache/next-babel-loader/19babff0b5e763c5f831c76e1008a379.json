{"ast":null,"code":"import _regeneratorRuntime from \"/media/renatha/Downloads/DEV/IFPB/contacts-ui/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/media/renatha/Downloads/DEV/IFPB/contacts-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/media/renatha/Downloads/DEV/IFPB/contacts-ui/context/list/ListState.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useReducer } from 'react';\nimport api from '../../utils/api';\nimport ListContext from './listContext';\nimport listReducer from './listReducer';\nimport { GET_LISTS, ADD_LIST, DELETE_LIST, SET_CURRENT, CLEAR_CURRENT, UPDATE_LIST, FILTER_LISTS, CLEAR_LISTS, CLEAR_FILTER, LIST_ERROR } from '../types';\n\nvar ListState = function ListState(props) {\n  _s();\n\n  var initialState = {\n    lists: null,\n    current: null,\n    filtered: null,\n    error: null\n  };\n\n  var _useReducer = useReducer(listReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var getLists = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return api.get('/lists');\n\n            case 3:\n              res = _context.sent;\n              console.log('RESPONSE ', res);\n              dispatch({\n                type: GET_LISTS,\n                payload: res.data\n              });\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: LIST_ERROR,\n                payload: _context.t0.response.msg\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function getLists() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var addList = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(list) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return api.post('/lists', list);\n\n            case 3:\n              res = _context2.sent;\n              dispatch({\n                type: ADD_LIST,\n                payload: res.data\n              });\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              dispatch({\n                type: LIST_ERROR,\n                payload: _context2.t0.response.msg\n              });\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 7]]);\n    }));\n\n    return function addList(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var deleteList = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id) {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return api[\"delete\"](\"/api/lists/\".concat(id));\n\n            case 3:\n              dispatch({\n                type: DELETE_LIST,\n                payload: id\n              });\n              _context3.next = 9;\n              break;\n\n            case 6:\n              _context3.prev = 6;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch({\n                type: LIST_ERROR,\n                payload: _context3.t0.response.msg\n              });\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[0, 6]]);\n    }));\n\n    return function deleteList(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var updateList = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(list) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return api.put(\"/api/lists/\".concat(list._id), list);\n\n            case 3:\n              res = _context4.sent;\n              dispatch({\n                type: UPDATE_LIST,\n                payload: res.data\n              });\n              _context4.next = 10;\n              break;\n\n            case 7:\n              _context4.prev = 7;\n              _context4.t0 = _context4[\"catch\"](0);\n              dispatch({\n                type: LIST_ERROR,\n                payload: _context4.t0.response.msg\n              });\n\n            case 10:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[0, 7]]);\n    }));\n\n    return function updateList(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var clearLists = function clearLists() {\n    dispatch({\n      type: CLEAR_LISTS\n    });\n  };\n\n  var setCurrent = function setCurrent(list) {\n    dispatch({\n      type: SET_CURRENT,\n      payload: list\n    });\n  };\n\n  var clearCurrent = function clearCurrent() {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  var filterLists = function filterLists(text) {\n    dispatch({\n      type: FILTER_LISTS,\n      payload: text\n    });\n  };\n\n  var clearFilter = function clearFilter() {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return __jsx(ListContext.Provider, {\n    value: {\n      lists: state.lists,\n      current: state.current,\n      filtered: state.filtered,\n      error: state.error,\n      addList: addList,\n      deleteList: deleteList,\n      setCurrent: setCurrent,\n      clearCurrent: clearCurrent,\n      updateList: updateList,\n      filterLists: filterLists,\n      clearFilter: clearFilter,\n      getLists: getLists,\n      clearLists: clearLists\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\n_s(ListState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ListState;\nexport default ListState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListState\");","map":{"version":3,"sources":["/media/renatha/Downloads/DEV/IFPB/contacts-ui/context/list/ListState.js"],"names":["React","useReducer","api","ListContext","listReducer","GET_LISTS","ADD_LIST","DELETE_LIST","SET_CURRENT","CLEAR_CURRENT","UPDATE_LIST","FILTER_LISTS","CLEAR_LISTS","CLEAR_FILTER","LIST_ERROR","ListState","props","initialState","lists","current","filtered","error","state","dispatch","getLists","get","res","console","log","type","payload","data","response","msg","addList","list","post","deleteList","id","updateList","put","_id","clearLists","setCurrent","clearCurrent","filterLists","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react'\n\nimport api from '../../utils/api'\nimport ListContext from './listContext'\nimport listReducer from './listReducer'\n\nimport {\n  GET_LISTS,\n  ADD_LIST,\n  DELETE_LIST,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_LIST,\n  FILTER_LISTS,\n  CLEAR_LISTS,\n  CLEAR_FILTER,\n  LIST_ERROR\n} from '../types'\n\nconst ListState = props => {\n  const initialState = {\n    lists: null,\n    current: null,\n    filtered: null,\n    error: null\n  }\n\n  const [state, dispatch] = useReducer(listReducer, initialState)\n\n  const getLists = async () => {\n    try {\n      const res = await api.get('/lists')\n      console.log('RESPONSE ', res)\n      dispatch({\n        type: GET_LISTS,\n        payload: res.data\n      })\n    } catch (err) {\n      dispatch({\n        type: LIST_ERROR,\n        payload: err.response.msg\n      })\n    }\n  }\n\n  const addList = async list => {\n    try {\n      const res = await api.post('/lists', list)\n      \n      dispatch({\n        type: ADD_LIST,\n        payload: res.data\n      })\n    } catch (err) {\n      dispatch({\n        type: LIST_ERROR,\n        payload: err.response.msg\n      })\n    }\n  }\n\n  const deleteList = async id => {\n    try {\n      await api.delete(`/api/lists/${id}`)\n\n      dispatch({\n        type: DELETE_LIST,\n        payload: id\n      })\n    } catch (err) {\n      dispatch({\n        type: LIST_ERROR,\n        payload: err.response.msg\n      })\n    }\n  }\n\n  const updateList = async list => {\n    try {\n      const res = await api.put(\n        `/api/lists/${list._id}`,\n        list\n      )\n\n      dispatch({\n        type: UPDATE_LIST,\n        payload: res.data\n      })\n    } catch (err) {\n      dispatch({\n        type: LIST_ERROR,\n        payload: err.response.msg\n      })\n    }\n  }\n\n  const clearLists = () => {\n    dispatch({ type: CLEAR_LISTS })\n  }\n\n  const setCurrent = list => {\n    dispatch({ type: SET_CURRENT, payload: list })\n  }\n\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT })\n  }\n\n  const filterLists = text => {\n    dispatch({ type: FILTER_LISTS, payload: text })\n  }\n\n  const clearFilter = () => {\n    dispatch({ type: CLEAR_FILTER })\n  }\n\n  return (\n    <ListContext.Provider\n      value={{\n        lists: state.lists,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        addList,\n        deleteList,\n        setCurrent,\n        clearCurrent,\n        updateList,\n        filterLists,\n        clearFilter,\n        getLists,\n        clearLists\n      }}\n    >\n      {props.children}\n    </ListContext.Provider>\n  )\n}\n\nexport default ListState\n"]},"metadata":{},"sourceType":"module"}