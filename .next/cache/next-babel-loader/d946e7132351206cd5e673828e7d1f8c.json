{"ast":null,"code":"import _defineProperty from \"/media/renatha/Downloads/DEV/IFPB/contacts-ui/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/media/renatha/Downloads/DEV/IFPB/contacts-ui/components/NewContact.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport AlertContext from '../context/alert/alertContext';\nimport ListContext from '../context/list/listContext';\nimport ContactContext from '../context/contact/contactContext';\nimport AuthContext from '../context/auth/authContext';\nimport Form from './styles/Form';\n\nvar NewContact = function NewContact() {\n  _s();\n\n  var authContext = useContext(AuthContext);\n  var alertContext = useContext(AlertContext);\n  var listContext = useContext(ListContext);\n  var contactContext = useContext(ContactContext);\n  var setAlert = alertContext.setAlert;\n  var lists = listContext.lists,\n      error = listContext.error,\n      clearCurrent = listContext.clearCurrent;\n  var addContact = contactContext.addContact;\n  var isAuthenticated = authContext.isAuthenticated,\n      loading = authContext.loading;\n\n  var _useState = useState({\n    name: '',\n    email: '',\n    phone: ''\n  }),\n      contact = _useState[0],\n      setContact = _useState[1];\n\n  var name = contact.name,\n      email = contact.email,\n      phone = contact.phone;\n\n  var onChangeContact = function onChangeContact(event) {\n    return setContact(_objectSpread(_objectSpread({}, contact), {}, _defineProperty({}, event.target.name, event.target.value)));\n  };\n\n  useEffect(function () {\n    if (!loading && !isAuthenticated) {\n      Router.push('/login');\n    }\n\n    return function () {\n      clearCurrent();\n    };\n  }, []);\n  console.log('current ', current);\n\n  var onSubmitContact = function onSubmitContact(event) {\n    event.preventDefault();\n\n    if (name === '') {\n      setAlert('O nome nÃ£o pode ficar em branco', 'danger');\n    } else {}\n\n    addContact(_objectSpread({\n      id: current.id\n    }, contact));\n\n    if (!error) {\n      setAlert('Adicionado com sucesso!', 'success');\n      setContact({\n        name: '',\n        email: '',\n        phone: ''\n      });\n    }\n  };\n\n  return isAuthenticated && __jsx(Form, {\n    onSubmit: onSubmitContact,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(\"fieldset\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Adicionar novo contato\"), __jsx(\"label\", {\n    htmlFor: \"name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Nome\", __jsx(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Digite o nome do contato\",\n    value: name,\n    onChange: onChangeContact,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Email\", __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Digite o email do contato\",\n    value: email,\n    onChange: onChangeContact,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"phone\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Telefone\", __jsx(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    placeholder: \"Digite o telefone do contato\",\n    value: phone,\n    onChange: onChangeContact,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginTop: '2.5rem'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/nova-lista\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Crie uma nova lista\")), __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Adicionar\"))));\n};\n\n_s(NewContact, \"kF9muhhaNcBiUpk/TgL0vFajOLw=\");\n\n_c = NewContact;\nexport default NewContact;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewContact\");","map":{"version":3,"sources":["/media/renatha/Downloads/DEV/IFPB/contacts-ui/components/NewContact.js"],"names":["React","useState","useContext","useEffect","Router","Link","AlertContext","ListContext","ContactContext","AuthContext","Form","NewContact","authContext","alertContext","listContext","contactContext","setAlert","lists","error","clearCurrent","addContact","isAuthenticated","loading","name","email","phone","contact","setContact","onChangeContact","event","target","value","push","console","log","current","onSubmitContact","preventDefault","id","display","justifyContent","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport Router from 'next/router'\nimport Link from 'next/link'\n\nimport AlertContext from '../context/alert/alertContext'\nimport ListContext from '../context/list/listContext'\nimport ContactContext from '../context/contact/contactContext'\nimport AuthContext from '../context/auth/authContext'\n\nimport Form from './styles/Form'\n\nconst NewContact = () => {\n  const authContext = useContext(AuthContext)\n  const alertContext = useContext(AlertContext)\n  const listContext = useContext(ListContext)\n  const contactContext = useContext(ContactContext)\n\n  const { setAlert } = alertContext\n  const { lists , error, clearCurrent } = listContext\n  const { addContact } = contactContext\n  const { isAuthenticated, loading } = authContext\n\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: ''\n  })\n\n  const { name, email, phone } = contact\n\n  const onChangeContact = event => setContact({ ...contact, [event.target.name]: event.target.value })\n\n  useEffect(() => {\n    if (!loading && !isAuthenticated) {\n      Router.push('/login')\n    }\n\n    return () => {\n      clearCurrent()\n    }\n  }, [])\n\n  console.log('current ', current)\n\n  const onSubmitContact = event => {\n    event.preventDefault()\n    if (name === '') {\n      setAlert('O nome nÃ£o pode ficar em branco', 'danger')\n    } else {\n\n    }\n    addContact({\n      id: current.id,\n      ...contact\n    })\n    if (!error) {\n      setAlert('Adicionado com sucesso!', 'success')\n      setContact({\n        name: '',\n        email: '',\n        phone: ''\n      })\n    }\n  }\n\n  return isAuthenticated && (\n    <Form\n      onSubmit={onSubmitContact}\n    >\n      <fieldset>\n        <h3>Adicionar novo contato</h3>\n        <label htmlFor=\"name\">\n          Nome\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Digite o nome do contato\"\n            value={name}\n            onChange={onChangeContact}\n          />\n        </label>\n        <label htmlFor=\"email\">\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Digite o email do contato\"\n            value={email}\n            onChange={onChangeContact}\n          />\n        </label>\n        <label htmlFor=\"phone\">\n          Telefone\n          <input\n            type=\"text\"\n            name=\"phone\"\n            placeholder=\"Digite o telefone do contato\"\n            value={phone}\n            onChange={onChangeContact}\n          />\n        </label>\n        <div style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          marginTop: '2.5rem'\n        }}>\n          <Link href='/nova-lista'>\n            <a>Crie uma nova lista</a>\n          </Link>\n          <button type=\"submit\">Adicionar</button>\n        </div>\n      </fieldset>\n    </Form>\n  )\n}\n\nexport default NewContact\n"]},"metadata":{},"sourceType":"module"}