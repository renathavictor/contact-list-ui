{"ast":null,"code":"var _jsxFileName = \"/media/renatha/Downloads/DEV/IFPB/contacts-ui/components/NewList.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport Router from 'next/router';\nimport Link from 'next/link';\nimport AlertContext from '../context/alert/alertContext';\nimport ListContext from '../context/list/listContext';\nimport ContactContext from '../context/contact/contactContext';\nimport AuthContext from '../context/auth/authContext';\nimport Form from './styles/Form';\n\nconst NewList = () => {\n  const authContext = useContext(AuthContext);\n  const alertContext = useContext(AlertContext);\n  const listContext = useContext(ListContext);\n  const contactContext = useContext(ContactContext);\n  const {\n    setAlert\n  } = alertContext;\n  const {\n    current,\n    addList,\n    error,\n    clearCurrent\n  } = listContext;\n  const {\n    addContact\n  } = contactContext;\n  const {\n    isAuthenticated,\n    loading\n  } = authContext;\n  const {\n    0: list,\n    1: setList\n  } = useState({\n    title: ''\n  });\n  const {\n    0: contact,\n    1: setContact\n  } = useState({\n    name: '',\n    email: '',\n    phone: ''\n  });\n  const {\n    title\n  } = list;\n  const {\n    name,\n    email,\n    phone\n  } = contact;\n\n  const onChange = event => setList(_objectSpread(_objectSpread({}, list), {}, {\n    [event.target.name]: event.target.value\n  }));\n\n  const onChangeContact = event => setContact(_objectSpread(_objectSpread({}, contact), {}, {\n    [event.target.name]: event.target.value\n  }));\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (title === '') {\n      setAlert('Preencha o nome da lista', 'danger');\n    } else {\n      addList(_objectSpread({}, list));\n    }\n  };\n\n  useEffect(() => {\n    if (!loading && !isAuthenticated) {\n      Router.push('/login');\n    }\n\n    return () => {\n      clearCurrent();\n    };\n  }, []);\n  console.log('current ', current);\n\n  const onSubmitContact = event => {\n    event.preventDefault();\n\n    if (name === '') {\n      setAlert('O nome n√£o pode ficar em branco', 'danger');\n    } else {\n      addContact(_objectSpread({\n        list: current.id\n      }, contact));\n\n      if (!error) {\n        setAlert('Adicionado com sucesso!', 'success');\n        setContact({\n          name: '',\n          email: '',\n          phone: ''\n        });\n      }\n    }\n  };\n\n  return isAuthenticated && __jsx(React.Fragment, null, !current ? __jsx(Form, {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 20\n    }\n  }, __jsx(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Crie uma nova lista\"), __jsx(\"label\", {\n    htmlFor: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Nome\", __jsx(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"Digite o nome da lista\",\n    value: title,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginTop: '2.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, \"Adicione contato em vez disso\")), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Criar\")))) : __jsx(Form, {\n    onSubmit: onSubmitContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, __jsx(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, \"Adicionar contato na lista: \", current.title), __jsx(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, \"Nome\", __jsx(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Digite o nome do contato\",\n    value: name,\n    onChange: onChangeContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Email\", __jsx(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Digite o email do contato\",\n    value: email,\n    onChange: onChangeContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"Telefone\", __jsx(\"input\", {\n    type: \"text\",\n    name: \"phone\",\n    placeholder: \"Digite o telefone do contato\",\n    value: phone,\n    onChange: onChangeContact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginTop: '2.5rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, __jsx(Link, {\n    href: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, \"Adicione contato em vez disso\")), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Adicionar\")))));\n};\n\nexport default NewList;","map":{"version":3,"sources":["/media/renatha/Downloads/DEV/IFPB/contacts-ui/components/NewList.js"],"names":["React","useState","useContext","useEffect","Router","Link","AlertContext","ListContext","ContactContext","AuthContext","Form","NewList","authContext","alertContext","listContext","contactContext","setAlert","current","addList","error","clearCurrent","addContact","isAuthenticated","loading","list","setList","title","contact","setContact","name","email","phone","onChange","event","target","value","onChangeContact","onSubmit","preventDefault","push","console","log","onSubmitContact","id","display","justifyContent","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react'\nimport Router from 'next/router'\nimport Link from 'next/link'\n\nimport AlertContext from '../context/alert/alertContext'\nimport ListContext from '../context/list/listContext'\nimport ContactContext from '../context/contact/contactContext'\nimport AuthContext from '../context/auth/authContext'\n\nimport Form from './styles/Form'\n\nconst NewList = () => {\n  const authContext = useContext(AuthContext)\n  const alertContext = useContext(AlertContext)\n  const listContext = useContext(ListContext)\n  const contactContext = useContext(ContactContext)\n\n  const { setAlert } = alertContext\n  const { current , addList, error, clearCurrent } = listContext\n  const { addContact } = contactContext\n  const { isAuthenticated, loading } = authContext\n\n  const [list, setList] = useState({\n    title: ''\n  })\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: ''\n  })\n\n  const { title } = list\n  const { name, email, phone } = contact\n\n  const onChange = event => setList({ ...list, [event.target.name]: event.target.value })\n  const onChangeContact = event => setContact({ ...contact, [event.target.name]: event.target.value })\n\n  const onSubmit = event => {\n    event.preventDefault()\n    if (title === '') {\n      setAlert('Preencha o nome da lista', 'danger')\n    } else {\n      addList({\n        ...list\n      })\n    }\n  }\n\n  useEffect(() => {\n    if (!loading && !isAuthenticated) {\n      Router.push('/login')\n    }\n\n    return () => {\n      clearCurrent()\n    }\n  }, [])\n\n  console.log('current ', current)\n\n  const onSubmitContact = event => {\n    event.preventDefault()\n    if (name === '') {\n      setAlert('O nome n√£o pode ficar em branco', 'danger')\n    } else {\n      addContact({\n        list: current.id,\n        ...contact\n      })\n      if (!error) {\n        setAlert('Adicionado com sucesso!', 'success')\n        setContact({\n          name: '',\n          email: '',\n          phone: ''\n        })\n      }\n    }\n  }\n\n  return isAuthenticated && (\n    <>\n      { !current ? <Form\n        onSubmit={onSubmit}\n      >\n        <fieldset>\n          <h3>Crie uma nova lista</h3>\n          <label htmlFor=\"title\">\n            Nome\n            <input\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Digite o nome da lista\"\n              value={title}\n              onChange={onChange}\n            />\n          </label>\n          <div style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            marginTop: '2.5rem'\n          }}>\n            <Link href='/login'>\n              <a>Adicione contato em vez disso</a>\n            </Link>\n            <button type=\"submit\">Criar</button>\n          </div>\n        </fieldset>\n      </Form>\n      : <Form\n        onSubmit={onSubmitContact}\n      >\n        <fieldset>\n          <h3>Adicionar contato na lista: {current.title}</h3>\n          <label htmlFor=\"name\">\n            Nome\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Digite o nome do contato\"\n              value={name}\n              onChange={onChangeContact}\n            />\n          </label>\n          <label htmlFor=\"email\">\n            Email\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Digite o email do contato\"\n              value={email}\n              onChange={onChangeContact}\n            />\n          </label>\n          <label htmlFor=\"phone\">\n            Telefone\n            <input\n              type=\"text\"\n              name=\"phone\"\n              placeholder=\"Digite o telefone do contato\"\n              value={phone}\n              onChange={onChangeContact}\n            />\n          </label>\n          <div style={{\n            display: 'flex',\n            justifyContent: 'space-between',\n            marginTop: '2.5rem'\n          }}>\n            <Link href='/login'>\n              <a>Adicione contato em vez disso</a>\n            </Link>\n            <button type=\"submit\">Adicionar</button>\n          </div>\n        </fieldset>\n      </Form>}\n    </>\n  )\n}\n\nexport default NewList\n"]},"metadata":{},"sourceType":"module"}