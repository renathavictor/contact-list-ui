{"ast":null,"code":"import _regeneratorRuntime from \"/media/renatha/Downloads/DEV/IFPB/contacts-ui/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchUserRequest),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(apiSignInRequest),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(verifyDataFromUser),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(watchApiSignIn),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchReloadUser),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchRefreshToken),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(_callee);\n\nimport { takeLatest, all, put, select, call } from 'redux-saga/effects';\nimport { apiSignIn, apiSignInSuccessful, apiSignInFailure, fetchUserSuccessful, reloadUser, modalMessage, refreshToken } from './index';\nimport * as services from './services';\nimport { getEditions } from './../editions/services';\n\nfunction fetchUserRequest(_ref) {\n  var payload, _yield$select, apiAuth, userId, response;\n\n  return _regeneratorRuntime.wrap(function fetchUserRequest$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          payload = _ref.payload;\n          _context.prev = 1;\n          _context.next = 4;\n          return select();\n\n        case 4:\n          _yield$select = _context.sent;\n          apiAuth = _yield$select.apiAuth;\n          userId = payload || apiAuth.user.id;\n          _context.next = 9;\n          return call(services.fetchUser, userId);\n\n        case 9:\n          response = _context.sent;\n          _context.next = 12;\n          return put(fetchUserSuccessful(response.data));\n\n        case 12:\n          _context.next = 17;\n          break;\n\n        case 14:\n          _context.prev = 14;\n          _context.t0 = _context[\"catch\"](1);\n          console.error(_context.t0);\n\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[1, 14]]);\n}\n\nexport function apiSignInRequest(_ref2) {\n  var payload, _yield$select2, auth, response;\n\n  return _regeneratorRuntime.wrap(function apiSignInRequest$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          payload = _ref2.payload;\n          _context2.prev = 1;\n          _context2.next = 4;\n          return select();\n\n        case 4:\n          _yield$select2 = _context2.sent;\n          auth = _yield$select2.auth;\n          _context2.next = 8;\n          return call(services.signIn, payload || auth.user.token);\n\n        case 8:\n          response = _context2.sent;\n          _context2.next = 11;\n          return call(fetchUserRequest, {\n            payload: response.data.data.id\n          });\n\n        case 11:\n          _context2.next = 13;\n          return put(apiSignInSuccessful());\n\n        case 13:\n          _context2.next = 20;\n          break;\n\n        case 15:\n          _context2.prev = 15;\n          _context2.t0 = _context2[\"catch\"](1);\n          console.error(_context2.t0);\n          _context2.next = 20;\n          return put(apiSignInFailure());\n\n        case 20:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[1, 15]]);\n}\nexport function verifyDataFromUser(payload) {\n  var _yield$select3, editions, phone, birthday, gender, listEditions, userHasInscription;\n\n  return _regeneratorRuntime.wrap(function verifyDataFromUser$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return select();\n\n        case 3:\n          _yield$select3 = _context3.sent;\n          editions = _yield$select3.editions;\n          phone = payload.phone, birthday = payload.birthday, gender = payload.gender;\n          _context3.next = 8;\n          return call(getEditions, editions.list.pagination);\n\n        case 8:\n          listEditions = _context3.sent;\n          userHasInscription = listEditions.data.find(function (inscription) {\n            return inscription.inscriptions[0];\n          });\n\n          if (!(userHasInscription && process.env.REACT_APP_PROJECT_ID === '50' && (!phone || !payload.taxpayer_number || !birthday || !gender))) {\n            _context3.next = 13;\n            break;\n          }\n\n          _context3.next = 13;\n          return put(modalMessage());\n\n        case 13:\n          _context3.next = 18;\n          break;\n\n        case 15:\n          _context3.prev = 15;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n\n        case 18:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 15]]);\n}\n\nfunction watchApiSignIn() {\n  return _regeneratorRuntime.wrap(function watchApiSignIn$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return takeLatest(apiSignIn, apiSignInRequest);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction watchReloadUser() {\n  return _regeneratorRuntime.wrap(function watchReloadUser$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(reloadUser, fetchUserRequest);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchRefreshToken() {\n  return _regeneratorRuntime.wrap(function watchRefreshToken$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest(refreshToken, fetchUserRequest);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nexport default function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return all([watchApiSignIn(), watchReloadUser(), watchRefreshToken()]);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}","map":{"version":3,"sources":["/media/renatha/Downloads/DEV/IFPB/contacts-ui/store/modules/auth/sagas.js"],"names":["fetchUserRequest","apiSignInRequest","verifyDataFromUser","watchApiSignIn","watchReloadUser","watchRefreshToken","takeLatest","all","put","select","call","apiSignIn","apiSignInSuccessful","apiSignInFailure","fetchUserSuccessful","reloadUser","modalMessage","refreshToken","services","getEditions","payload","apiAuth","userId","user","id","fetchUser","response","data","console","error","auth","signIn","token","editions","phone","birthday","gender","list","pagination","listEditions","userHasInscription","find","inscription","inscriptions","process","env","REACT_APP_PROJECT_ID","taxpayer_number"],"mappings":"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","sourcesContent":["import { takeLatest, all, put, select, call } from 'redux-saga/effects'\n\nimport {\n  apiSignIn,\n  apiSignInSuccessful,\n  apiSignInFailure,\n  fetchUserSuccessful,\n  reloadUser,\n  modalMessage,\n  refreshToken\n} from './index'\n\nimport * as services from './services'\nimport { getEditions } from './../editions/services'\n\nfunction * fetchUserRequest ({ payload }) {\n  try {\n    const { apiAuth } = yield select()\n    const userId = payload || apiAuth.user.id\n    const response = yield call(services.fetchUser, userId)\n    yield put(fetchUserSuccessful(response.data))\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nexport function * apiSignInRequest ({ payload }) {\n  try {\n    const { auth } = yield select()\n    const response = yield call(services.signIn, payload || auth.user.token)\n    yield call(fetchUserRequest, { payload: response.data.data.id })\n    yield put(apiSignInSuccessful())\n  } catch (e) {\n    console.error(e)\n    yield put(apiSignInFailure())\n  }\n}\n\nexport function * verifyDataFromUser (payload) {\n  try {\n    const { editions } = yield select()\n    const { phone, birthday, gender } = payload\n    const listEditions = yield call(getEditions, editions.list.pagination)\n    const userHasInscription = listEditions.data.find(inscription => inscription.inscriptions[0])\n    if (userHasInscription && process.env.REACT_APP_PROJECT_ID === '50' && (!phone || !payload.taxpayer_number || !birthday || !gender)) {\n      yield put(modalMessage())\n    }\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nfunction * watchApiSignIn () {\n  yield takeLatest(apiSignIn, apiSignInRequest)\n}\n\nfunction * watchReloadUser () {\n  yield takeLatest(reloadUser, fetchUserRequest)\n}\n\nfunction * watchRefreshToken () {\n  yield takeLatest(refreshToken, fetchUserRequest)\n}\n\nexport default function * () {\n  yield all([\n    watchApiSignIn(),\n    watchReloadUser(),\n    watchRefreshToken()\n  ])\n}\n"]},"metadata":{},"sourceType":"module"}