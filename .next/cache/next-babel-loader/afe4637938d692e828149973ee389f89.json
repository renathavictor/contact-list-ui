{"ast":null,"code":"var _jsxFileName = \"/media/renatha/Downloads/DEV/IFPB/contacts-ui/pages/_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport Page from '../components/Page'; // import store from '../store/configureStore'\n\nimport AuthState from '../context/auth/authState';\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    } //  this exposes the query to the user\n\n\n    pageProps.query = ctx.query;\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, __jsx(Page, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nexport default MyApp; // import App from 'next/app'\n// import { Provider } from 'react-redux'\n// import Page from '../components/Page'\n// import store from '../store/configureStore'\n// class MyApp extends App {\n//   static async getInitialProps({ Component, ctx }) {\n//     let pageProps = {}\n//     if (Component.getInitialProps) {\n//       pageProps = await Component.getInitialProps(ctx)\n//     }\n//     //  this exposes the query to the user\n//     pageProps.query = ctx.query\n//     return { pageProps }\n//   }\n//   render() {\n//     const { Component, pageProps } = this.props\n//     return (\n//       <Provider store={store}>\n//         <Page>\n//           <Component { ...pageProps } />\n//         </Page>\n//       </Provider>\n//     )\n//   }\n// }\n// export default MyApp","map":{"version":3,"sources":["/media/renatha/Downloads/DEV/IFPB/contacts-ui/pages/_app.js"],"names":["App","Provider","Page","AuthState","MyApp","getInitialProps","Component","ctx","pageProps","query","render","props","store"],"mappings":";;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,MAAMC,KAAN,SAAoBJ,GAApB,CAAwB;AAEtB,eAAaK,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAIF,SAAS,CAACD,eAAd,EAA+B;AAC7BG,MAAAA,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlB;AACD,KAL8C,CAM/C;;;AACAC,IAAAA,SAAS,CAACC,KAAV,GAAkBF,GAAG,CAACE,KAAtB;AACA,WAAO;AAAED,MAAAA;AAAF,KAAP;AACD;;AAEDE,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEJ,MAAAA,SAAF;AAAaE,MAAAA;AAAb,QAA2B,KAAKG,KAAtC;AAEA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAgBJ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF;AAOD;;AAxBqB;;AA2BxB,eAAeJ,KAAf,C,CAGA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import App from 'next/app'\nimport { Provider } from 'react-redux'\n\nimport Page from '../components/Page'\n// import store from '../store/configureStore'\nimport AuthState from '../context/auth/authState'\n\nclass MyApp extends App {\n\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {}\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n    //  this exposes the query to the user\n    pageProps.query = ctx.query\n    return { pageProps }\n  }\n\n  render() {\n\n    const { Component, pageProps } = this.props\n\n    return (\n      <Provider store={store}>\n        <Page>\n          <Component { ...pageProps } />\n        </Page>\n      </Provider>\n    )\n  }\n}\n\nexport default MyApp\n\n\n// import App from 'next/app'\n// import { Provider } from 'react-redux'\n\n// import Page from '../components/Page'\n// import store from '../store/configureStore'\n\n// class MyApp extends App {\n\n//   static async getInitialProps({ Component, ctx }) {\n//     let pageProps = {}\n\n//     if (Component.getInitialProps) {\n//       pageProps = await Component.getInitialProps(ctx)\n//     }\n//     //  this exposes the query to the user\n//     pageProps.query = ctx.query\n//     return { pageProps }\n//   }\n\n//   render() {\n\n//     const { Component, pageProps } = this.props\n\n//     return (\n//       <Provider store={store}>\n//         <Page>\n//           <Component { ...pageProps } />\n//         </Page>\n//       </Provider>\n//     )\n//   }\n// }\n\n// export default MyApp"]},"metadata":{},"sourceType":"module"}