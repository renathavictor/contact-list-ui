{"ast":null,"code":"import _toConsumableArray from \"/media/renatha/Downloads/DEV/IFPB/contacts-ui/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/media/renatha/Downloads/DEV/IFPB/contacts-ui/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_LISTS, ADD_LIST, DELETE_LIST, SET_CURRENT, CLEAR_CURRENT, UPDATE_LIST, FILTER_LISTS, CLEAR_FILTER, LIST_ERROR, CLEAR_LISTS } from '../types';\nexport default (function (state, action) {\n  switch (action.type) {\n    case GET_LISTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        lists: action.payload,\n        loading: false\n      });\n\n    case ADD_LIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        lists: [action.payload].concat(_toConsumableArray(state.lists)),\n        loading: false\n      });\n\n    case UPDATE_LIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        lists: state.lists.map(function (list) {\n          return list._id === action.payload._id ? action.payload : list;\n        }),\n        loading: false\n      });\n\n    case DELETE_LIST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        lists: state.lists.filter(function (list) {\n          return list._id !== action.payload;\n        }),\n        loading: false\n      });\n\n    case CLEAR_LISTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        lists: null,\n        filtered: null,\n        error: null,\n        current: null\n      });\n\n    case SET_CURRENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        current: action.payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        current: null\n      });\n\n    case FILTER_LISTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filtered: state.lists.filter(function (list) {\n          var regex = new RegExp(\"\".concat(action.payload), 'gi');\n          return list.name.match(regex) || list.email.match(regex);\n        })\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        filtered: null\n      });\n\n    case LIST_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/media/renatha/Downloads/DEV/IFPB/contacts-ui/context/list/listReducer.js"],"names":["GET_LISTS","ADD_LIST","DELETE_LIST","SET_CURRENT","CLEAR_CURRENT","UPDATE_LIST","FILTER_LISTS","CLEAR_FILTER","LIST_ERROR","CLEAR_LISTS","state","action","type","lists","payload","loading","map","list","_id","filter","filtered","error","current","regex","RegExp","name","match","email"],"mappings":";;;;;;;AAAA,SACEA,SADF,EAEEC,QAFF,EAGEC,WAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,WANF,EAOEC,YAPF,EAQEC,YARF,EASEC,UATF,EAUEC,WAVF,QAWO,UAXP;AAaA,gBAAe,UAACC,KAAD,EAAQC,MAAR,EAAmB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,SAAL;AACE,6CACKU,KADL;AAEEG,QAAAA,KAAK,EAAEF,MAAM,CAACG,OAFhB;AAGEC,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKd,QAAL;AACE,6CACKS,KADL;AAEEG,QAAAA,KAAK,GAAGF,MAAM,CAACG,OAAV,4BAAsBJ,KAAK,CAACG,KAA5B,EAFP;AAGEE,QAAAA,OAAO,EAAE;AAHX;;AAKF,SAAKV,WAAL;AACE,6CACKK,KADL;AAEEG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYG,GAAZ,CAAgB,UAAAC,IAAI;AAAA,iBACzBA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACG,OAAP,CAAeI,GAA5B,GAAkCP,MAAM,CAACG,OAAzC,GAAmDG,IAD1B;AAAA,SAApB,CAFT;AAKEF,QAAAA,OAAO,EAAE;AALX;;AAOF,SAAKb,WAAL;AACE,6CACKQ,KADL;AAEEG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYM,MAAZ,CACL,UAAAF,IAAI;AAAA,iBAAIA,IAAI,CAACC,GAAL,KAAaP,MAAM,CAACG,OAAxB;AAAA,SADC,CAFT;AAKEC,QAAAA,OAAO,EAAE;AALX;;AAOF,SAAKN,WAAL;AACE,6CACKC,KADL;AAEEG,QAAAA,KAAK,EAAE,IAFT;AAGEO,QAAAA,QAAQ,EAAE,IAHZ;AAIEC,QAAAA,KAAK,EAAE,IAJT;AAKEC,QAAAA,OAAO,EAAE;AALX;;AAOF,SAAKnB,WAAL;AACE,6CACKO,KADL;AAEEY,QAAAA,OAAO,EAAEX,MAAM,CAACG;AAFlB;;AAIF,SAAKV,aAAL;AACE,6CACKM,KADL;AAEEY,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAKhB,YAAL;AACE,6CACKI,KADL;AAEEU,QAAAA,QAAQ,EAAEV,KAAK,CAACG,KAAN,CAAYM,MAAZ,CAAmB,UAAAF,IAAI,EAAI;AACnC,cAAMM,KAAK,GAAG,IAAIC,MAAJ,WAAcb,MAAM,CAACG,OAArB,GAAgC,IAAhC,CAAd;AACA,iBAAOG,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBH,KAAhB,KAA0BN,IAAI,CAACU,KAAL,CAAWD,KAAX,CAAiBH,KAAjB,CAAjC;AACD,SAHS;AAFZ;;AAOF,SAAKhB,YAAL;AACE,6CACKG,KADL;AAEEU,QAAAA,QAAQ,EAAE;AAFZ;;AAIF,SAAKZ,UAAL;AACE,6CACKE,KADL;AAEEW,QAAAA,KAAK,EAAEV,MAAM,CAACG;AAFhB;;AAIF;AACE,aAAOJ,KAAP;AAlEJ;AAoED,CArED","sourcesContent":["import {\n  GET_LISTS,\n  ADD_LIST,\n  DELETE_LIST,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_LIST,\n  FILTER_LISTS,\n  CLEAR_FILTER,\n  LIST_ERROR,\n  CLEAR_LISTS\n} from '../types'\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_LISTS:\n      return {\n        ...state,\n        lists: action.payload,\n        loading: false\n      }\n    case ADD_LIST:\n      return {\n        ...state,\n        lists: [action.payload, ...state.lists],\n        loading: false\n      }\n    case UPDATE_LIST:\n      return {\n        ...state,\n        lists: state.lists.map(list =>\n          list._id === action.payload._id ? action.payload : list\n        ),\n        loading: false\n      }\n    case DELETE_LIST:\n      return {\n        ...state,\n        lists: state.lists.filter(\n          list => list._id !== action.payload\n        ),\n        loading: false\n      }\n    case CLEAR_LISTS:\n      return {\n        ...state,\n        lists: null,\n        filtered: null,\n        error: null,\n        current: null\n      }\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload\n      }\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null\n      }\n    case FILTER_LISTS:\n      return {\n        ...state,\n        filtered: state.lists.filter(list => {\n          const regex = new RegExp(`${action.payload}`, 'gi')\n          return list.name.match(regex) || list.email.match(regex)\n        })\n      }\n    case CLEAR_FILTER:\n      return {\n        ...state,\n        filtered: null\n      }\n    case LIST_ERROR:\n      return {\n        ...state,\n        error: action.payload\n      }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}